import os
import asyncio
import random
import logging
from pyrogram import Client, filters, enums
from pyrogram.errors import UserNotParticipant, FloodWait, UserIsBlocked, InputUserDeactivated
from pyrogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from config import PICS, START_MSG, CHANNELS, ADMINS, AUTH_CHANNEL, CUSTOM_FILE_CAPTION
from FallenMovies.helpers.utils import Media, get_file_details, get_size
logger = logging.getLogger(__name__)


# -------------------¬ª “ì·¥è Ä·¥Ñ·¥á-·¥ç·¥áss·¥Ä…¢·¥á ¬´------------------- #

FORCE_MSG = """
<code> ú·¥á è 
·¥Ä·¥Ñ·¥Ñ·¥è Ä·¥Ö…™…¥…¢ ·¥õ·¥è ·¥ç è ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á  è·¥è·¥ú'·¥†·¥á …¥·¥è·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás ·¥Ñ ú·¥Ä…¥…¥·¥á ü  è·¥á·¥õ, …™“ì  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á ·¥õ ú·¥á…¥ ·¥ä·¥è…™…¥ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Ä…¥·¥Ö s·¥õ·¥Ä Ä·¥õ ·¥ç·¥á ·¥Ä…¢·¥Ä…™…¥ !</code>
"""


# -------------------¬ª s·¥õ·¥Ä Ä·¥õ ¬´------------------- #

@Client.on_message(filters.command("start"))
async def start(bot, cmd):
    usr_cmdall1 = cmd.text
    if usr_cmdall1.startswith("/start subinps"):
        if AUTH_CHANNEL:
            invite_link = await bot.create_chat_invite_link(int(AUTH_CHANNEL))
            try:
                user = await bot.get_chat_member(int(AUTH_CHANNEL), cmd.from_user.id)
                if user.status == "kicked":
                    await bot.send_message(
                        chat_id=cmd.from_user.id,
                        text="Sorry Sir, You are Banned to use me.",
                        parse_mode=enums.ParseMode.MARKDOWN,
                        disable_web_page_preview=True
                    )
                    return
            except UserNotParticipant:
                ident, file_id = cmd.text.split("_-_-_-_")
                await bot.send_message(
                    chat_id=cmd.from_user.id,
                    text=FORCE_MSG,
                    reply_markup=InlineKeyboardMarkup(
                        [
                            [
                                InlineKeyboardButton("ü§ñ ·¥ä·¥è…™…¥ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=invite_link.invite_link)
                            ],
                            [
                                InlineKeyboardButton(" üîÑ ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥", callback_data=f"checksub#{file_id}")
                            ]
                        ]
                    ),
                    parse_mode=enums.ParseMode.MARKDOWN,
                    disable_web_page_preview=True
                )
                return
            except Exception:
                await bot.send_message(
                    chat_id=cmd.from_user.id,
                    text="Something went Wrong.",
                    parse_mode=enums.ParseMode.MARKDOWN,
                    disable_web_page_preview=True
                )
                return
        try:
            ident, file_id = cmd.text.split("_-_-_-_")
            filedetails = await get_file_details(file_id)
            for files in filedetails:
                title = files.file_name
                size=get_size(files.file_size)
                f_caption=files.caption
                if CUSTOM_FILE_CAPTION:
                    try:
                        f_caption=CUSTOM_FILE_CAPTION.format(file_name=title, file_size=size, file_caption=f_caption)
                    except Exception as e:
                        print(e)
                        f_caption=f_caption
                if f_caption is None:
                    f_caption = f"{files.file_name}"
                buttons = [
                    [
                           InlineKeyboardButton('·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás', url="https://t.me/TheMoviesUpdate"),
                           InlineKeyboardButton('s·¥ú·¥ò·¥ò·¥è Ä·¥õ ', url="https://t.me/TheMoviesRequests")
                    ]
                    
                    ]
                await bot.send_cached_media(
                    chat_id=cmd.from_user.id,
                    file_id=file_id,
                    caption=f_caption,
                    reply_markup=InlineKeyboardMarkup(buttons)
                    )
        except Exception as err:
            await cmd.reply_text(f"Something went wrong!\n\n**Error:** `{err}`")
    elif len(cmd.command) > 1 and cmd.command[1] == 'subscribe':
        invite_link = await bot.create_chat_invite_link(int(AUTH_CHANNEL))
        await bot.send_message(
            chat_id=cmd.from_user.id,
            text={FORCE_MSG},
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton("ü§ñ J·¥è…™…¥ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=invite_link.invite_link)
                    ]
                ]
            )
        )
    else:
        await cmd.reply_photo(
            photo=random.choice(PICS),
            caption=START_MSG,
            parse_mode=enums.ParseMode.MARKDOWN,
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton("‚ûï ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ‚ûï", url=f"https://t.me/TheHanCockBot?startgroup=true")
                    ],
        
                    [
                        InlineKeyboardButton("üóØÔ∏è ·¥ú·¥ò·¥Ä·¥Ö·¥õ·¥ás", url="https://t.me/TheMoviesUpdate"),
                        InlineKeyboardButton("üé° s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url="https://t.me/TheMoviesRequests")
                    ]
                    ]
               )
        )



# -------------------¬ª ·¥Ñ ú·¥Ä…¥…¥·¥á ü ¬´------------------- #

@Client.on_message(filters.command('channel') & filters.user(ADMINS))
async def channel_info(bot, message):
    """Send basic information of channel"""
    if isinstance(CHANNELS, (int, str)):
        channels = [CHANNELS]
    elif isinstance(CHANNELS, list):
        channels = CHANNELS
    else:
        raise ValueError("Unexpected type of CHANNELS")

    text = 'üìë **…™…¥·¥Ö·¥áx·¥á·¥Ö ·¥Ñ ú·¥Ä…¥…¥·¥á üs|…¢ Ä·¥è·¥ú·¥òs**\n'
    for channel in channels:
        chat = await bot.get_chat(channel)
        if chat.username:
            text += '\n@' + chat.username
        else:
            text += '\n' + chat.title or chat.first_name

    text += f'\n\n** ú·¥á Ä·¥á:** {len(CHANNELS)}'

    if len(text) < 4096:
        await message.reply(text)
    else:
        file = 'Indexed channels.txt'
        with open(file, 'w') as f:
            f.write(text)
        await message.reply_document(file)
        os.remove(file)



# -------------------¬ª ·¥õ·¥è·¥õ·¥Ä ü ¬´------------------- #

@Client.on_message(filters.command('total') & filters.user(ADMINS))
async def total(bot, message):
    """Show total files in database"""
    msg = await message.reply("·¥ò Ä·¥è·¥Ñ·¥áss…™…¥…¢...‚è≥", quote=True)
    try:
        total = await Media.count_documents()
        await msg.edit(f'üìÅ s·¥Ä·¥†·¥á·¥Ö “ì…™ ü·¥ás: {total}')
    except Exception as e:
        logger.exception('“ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥Ñ ú·¥á·¥Ñ·¥ã ·¥õ·¥è·¥õ·¥Ä ü “ì…™ ü·¥ás.')
        await msg.edit(f'·¥á Ä Ä·¥è Ä: {e}')



# -------------------¬ª  ü·¥è…¢…¢·¥á Ä ¬´------------------- #

@Client.on_message(filters.command('logger') & filters.user(ADMINS))
async def log_file(bot, message):
    """Send log file"""
    try:
        await message.reply_document('TelegramBot.log')
    except Exception as e:
        await message.reply(str(e))


# -------------------¬ª ·¥Ö·¥á ü·¥á·¥õ·¥á ¬´------------------- #

@Client.on_message(filters.command('delete') & filters.user(ADMINS))
async def delete(bot, message):
    """Delete file from database"""
    reply = message.reply_to_message
    if reply and reply.media:
        msg = await message.reply("·¥ò Ä·¥è·¥Ñ·¥áss…™…¥…¢...‚è≥", quote=True)
    else:
        await message.reply(' Ä·¥á·¥ò ü è ·¥õ·¥è “ì…™ ü·¥á ·¥°…™·¥õ ú /delete ·¥° ú…™·¥Ñ ú  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á', quote=True)
        return

    for file_type in (enums.MessageMediaType.VIDEO, enums.MessageMediaType.AUDIO, enums.MessageMediaType.DOCUMENT):
        media = getattr(reply, file_type.value, None)
        if media is not None:
            break
    else:
        await msg.edit('·¥õ ú…™s …™s …¥·¥è·¥õ s·¥ú·¥ò·¥ò·¥è Ä·¥õ·¥á·¥Ö “ì…™ ü·¥á “ì·¥è Ä·¥ç·¥Ä·¥õ')
        return

    result = await Media.collection.delete_many({
        'file_name': media.file_name,
        'file_size': media.file_size,
        'mime_type': media.mime_type
    })
    if result.deleted_count:
        await msg.edit('“ì…™ ü·¥á …™s s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥Ö·¥á ü·¥á·¥õ·¥á·¥Ö “ì Ä·¥è·¥ç ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á')
    else:
        await msg.edit('“ì…™ ü·¥á …¥·¥è·¥õ “ì·¥è·¥ú…¥·¥Ö …™…¥ ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á')


# -------------------¬ª ·¥Ö·¥á ü·¥á·¥õ·¥á-·¥Ä ü ü ¬´------------------- #

@Client.on_message(filters.command('deleteall') & filters.user(ADMINS))
async def delete_all_index(bot, message):
    await message.reply_text(
        '·¥õ ú·¥ús ·¥°…™ ü ü ·¥Ö·¥á ü·¥á·¥õ·¥á ·¥Ä ü ü …™…¥·¥Ö·¥áx·¥á·¥Ö “ì…™ ü·¥ás.\n\n·¥Ö·¥è  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥Ñ·¥è…¥·¥õ…™…¥·¥ú·¥á??',
        reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        text="‚úÖ  è·¥á·¥Ä ú", callback_data="autofilter_delete"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚ùå …¥·¥è·¥ò·¥á", callback_data="close_data"
                    )
                ],
            ]
        ),
        quote=True,
    )


# -------------------¬ª ·¥Ñ·¥Ä ü ü ô·¥Ä·¥Ñ·¥ã- Ä·¥á…¢·¥áx ¬´------------------- #

@Client.on_callback_query(filters.regex(r'^autofilter_delete'))
async def delete_all_index_confirm(bot, message):
    await Media.collection.drop()
    await message.answer()
    await message.message.edit('s·¥ú·¥Ñ·¥Ñ·¥áss·¥Ö·¥ú ü ü è ·¥Ö·¥á ü·¥á·¥õ·¥á·¥Ö ·¥Ä ü ü ·¥õ ú·¥á …™…¥·¥Ö·¥áx·¥á·¥Ö “ì…™ ü·¥ás.')



@Client.on_callback_query(filters.regex("cbrules"))
async def cbrules(_, query: CallbackQuery):
    await query.answer(
        f"""‚ö†Ô∏è …™·¥ç·¥ò·¥è Ä·¥õ·¥Ä…¥·¥õ ·¥ç·¥áss·¥Ä…¢·¥á  Ä·¥á·¥Ä·¥Ö ‚ö†Ô∏è
s·¥á…¥·¥Ö ·¥áx·¥Ä·¥Ñ·¥õ …¥·¥Ä·¥ç·¥á ·¥Ä…¥·¥Ö ·¥è…¥ üy ·¥ç·¥è·¥†…™·¥á …¥·¥Ä·¥ç·¥á ·¥°…™·¥õ ú y·¥á·¥Ä Ä ·¥è Ä  ü·¥Ä…¥…¢·¥ú·¥Ä…¢·¥á. (·¥Ñ ú·¥á·¥Ñ·¥ã ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ Íú±·¥©·¥á ü ü…™…¥…¢ Íú±·¥Ä·¥ç·¥á ·¥ÄÍú± …™…¥ …¢·¥è·¥è…¢ ü·¥á) ·¥Ö·¥è…¥·¥õ ·¥Ä·¥Ö·¥Ö ·¥Ä…¥y ·¥áx·¥õ Ä·¥Ä ·¥°·¥è Ä·¥ÖÍú± ·¥° ú…™ ü·¥á  Ä·¥á«´·¥ú·¥áÍú±·¥õ…™…¥…¢. ·¥è·¥õ ú·¥á Ä·¥°…™Íú±·¥á y·¥è·¥ú ·¥Ö·¥è…¥·¥õ …¢·¥á·¥õ ·¥õ ú·¥á ·¥ç·¥è·¥†…™·¥á ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ üy üö´ 
…™“ì ·¥ç·¥è·¥†…™·¥á …¥·¥è·¥õ “ì·¥è·¥ú…¥·¥Ö ·¥õ ú·¥á…¥  è·¥è·¥ú  Ä·¥á«´·¥ú·¥ás·¥õ ·¥õ·¥è ·¥è·¥°…¥·¥á Ä  
""", show_alert=True,
    )
